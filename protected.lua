--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.5b) ~  Much Love, Ferib 

]]--

local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit;local v4=v3.bxor or v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v30=0 + 0;local v31;while true do if (v30==(153 -(119 + 33))) then return v5(v31);end if (v30==(264 -(23 + 241))) then v31={};for v40=1948 -(886 + 1061), #v24 do v6(v31,v0(v4(v1(v2(v24,v40,v40 + 1)),v1(v2(v25,(175 -(9 + 165)) + ((v40-(1 -0))% #v25),(858 -(56 + 801)) + ((v40-(1 + 0))% #v25) + 1)))%(232 + 24)));end v30=1 + 0;end end end local v8=string.char;local v9=string.byte;local v10=string.sub;local v11=bit32 or bit;local v12=v11.bxor or v11.bxor;local v13=table.concat;local v14=table.insert;local function v15(v26,v27)local v32=(722 -(272 + 450)) + (19 -(5 + 14));local v33;local v34;while true do if (v32==(2 -(1 + 0))) then while true do if ((0 + 0)==v33) then v34={};for v41=(65 + 359) -((1748 -(74 + 1652)) + 401), #v26 do v14(v34,v8(v12(v9(v10(v26,v41,v41 + (((492 -295) -((131 -(13 + 82)) + 31 + 129)) -(0 -(0 + 0))))),v9(v10(v27,((3 -1) -(1488 -(722 + 765))) + ((v41-(1 + (0 -0)))% #v27),((2 + 0) -(2 -1)) + 0 + 0 + ((v41-((2014 -(782 + 1169)) -(5 + 2 + (1508 -(618 + 835)))))% #v27) + (((3220 -(233 + 152)) -(20 + 82 + 164 + 1462)) -(((2324 -(4 + 15)) -(1964 -((307 -200) + 180))) + ((1044 + 918) -(396 + 931 + 157)))))))%(((240 + 148) -((1471 -1157) + (1519 -(770 + 676)))) + ((434 -(125 + 309)) -(0 -0)) + ((1844 -1365) -(191 + 30 + 3)))));end v33=1 + 0;end if (v33==(1285 -(600 + 684))) then return v13(v34);end end break;end if (v32==0) then v33=0 + 0;v34=nil;v32=(2 -1) + 0;end end end local v16=string.char;local v17=string.byte;local v18=string.sub;local v19=bit32 or bit;local v20=v19.bxor or v19.bxor;local v21=table.concat;local v22=table.insert;local function v23(v28,v29)local v35=0;local v36;local v37;local v38;local v39;while true do if (v35==(1 -0)) then v38=nil;v39=nil;v35=2 + 0;end if (v35==(174 -(88 + 86))) then v36=(2584 -(1241 + 226)) -(960 + 157);v37=nil;v35=1034 -(322 + 711);end if (v35==2) then while true do if (v36==((0 + 0) -(0 -0))) then v37=((156 -(13 + 25)) -(117 + 1)) -(0 -0);v38=nil;v36=(2 -1) -(0 + 0);end if (((654 -(503 + 150)) + 0 + 0)==v36) then v39=nil;while true do if (v37==((0 -0) + 0)) then local v42=0 + 0;local v43;while true do if (v42==(0 -0)) then v43=0 + (599 -(584 + 15));while true do if (v43==((1 + 0) -(835 -(744 + 91)))) then v37=1 + (0 -(551 -(533 + 18))) + ((0 + 0) -0);break;end if (v43==(1162 -((1913 -(485 + 401)) + 135))) then local v47=277 -(81 + 196);while true do if (v47==0) then v38=(0 -0) + (1078 -(415 + 663)) + (1393 -(856 + 537));v39=nil;v47=1038 -(710 + 327);end if (v47==(1259 -(604 + 654))) then v43=1;break;end end end end break;end end end if (v37==(((1 + 1) -(1 -0)) + ((0 -0) -0))) then while true do local v44=0 -0;local v45;local v46;while true do if ((0 + 0)==v44) then v45=0 -0;v46=nil;v44=1;end if (v44==(1 + 0)) then while true do if (v45==(0 + 0)) then v46=0;while true do if (v46==((1984 -(867 + 363)) -((285 -142) + 284 + 327))) then if ((414 -(381 + ((51 + 54) -73)))==v38) then return v21(v39);end if (v38==((799 -(318 + 264)) -(174 + 43))) then local v48=0;local v49;local v50;while true do if (v48==(2 -1)) then while true do if (v49==((1116 -(333 + 766)) -((44 -30) + (5 -2)))) then v50=988 -(270 + 718);while true do if (v50==(0 + 0 + 0)) then local v51=0;while true do if (v51==(1 -0)) then v50=1 + 0;break;end if (v51==0) then v39={};for i=((2157 -1025) -(964 + 26 + 141)) + 0 + 0 + ((12 + 21 + 3) -(((1258 -((3082 -1944) + (234 -163))) -((62 -25) -18)) + ((1641 + 231) -(((1577 -1182) -(28 + (23 -9))) + (1036 -(72 + 160)) + 709)))), #v28 do v22(v39,v16(v20(v17(v18(v28,i,i + (1 -0) + ((102 -45) -(41 + (80 -(33 + 31)))) + (((83 + 282) -(153 + 95)) -(2 + 2 + 37 + 13 + (483 -(385 + 54)) + 4 + 15)))),v17(v18(v29,(520 -(89 + 430)) + ((i-((((11263 -8026) -(3078 -(588 + 265))) -(645 + (((4962 -(978 + 480)) -(431 + 1487)) -(755 + 465)))) -((76 -(52 + 24)) + 0)))% #v29),((((941 -538) + (2053 -675)) -((1156 -(330 + 158)) + (1369 -1092))) -((1271 -(605 + (68 -27))) + ((989 -556) -(1964 -(349 + (1926 -(456 + 78))))))) + (1092 -(26 + 525 + (2327 -1786))) + ((i-(((2809 -(208 + 695 + (1256 -(107 + 257)))) -(((3362 -(5026 -3625)) -(((918 + 2140) -(3455 -(307 + 1516))) + ((883 + 546) -(286 + 205 + 470)))) + ((967 + 1794) -(1243 + 572)))) + (((584 -106) + (2676 -(759 + 1076))) -(((4880 -2727) -((2369 -1484) + 35 + 1079)) + 299 + (2642 -(1414 + 362))))))% #v29) + (((1 + 1) -((522 + 298) -(6 + 248 + (2428 -(777 + 1086))))) -(0 + 0)) + ((((2764 -(1655 + 307)) + 370 + 38) -((2465 -((4526 -2479) -(1752 -1067))) + 73 + 34)) -(1185 -(1036 + 149))))))%(((1147 -650) -((1903 -(1341 + 527)) + (((2291 -(243 + 935)) -(119 + 859 + 49 + 83)) -(2 + 0)))) -(12 + (7 -4) + 129 + (((1838 + 1845) -((3132 -(385 + 1351)) + 601)) -(347 + 269 + ((107 + 4306) -(8713 -5309))))))));end v51=1 -0;end end end if (v50==((2757 -2021) -(662 + 3 + 70))) then v38=1 + 0 + 0 + ((2244 -(602 + 218)) -((1802 -1425) + 1047)) + ((0 + 0) -(0 -0)) + 0;break;end end break;end end break;end if (v48==0) then v49=1921 -(1167 + 754);v50=nil;v48=428 -(270 + 157);end end end break;end end break;end end break;end end end break;end end break;end end break;end end end loadstring(game:HttpGet(v23(v15(vv7("\61\23\129\176\4\233\61\20\133\223\108\230\89\121\135\220\1\130\83\16","\97\37\181\236\48\222")),v15(v7("\182\12\240\150\0\82\182\15\242\148\0\92\216\97\242\145\108\54\219\15\159\149\111\93\182\4\244\251\110\91\216\97\251\144\0\91\220\10\159\150\108\89\182\15\240\150\0\83","\234\61\195\167\92\106"),v7("\253\145\232\223\123\188\8\253\145\232\213\123\179\1\253\146\238\217\123\191\0","\161\163\218\236\39\138\57")))))();
